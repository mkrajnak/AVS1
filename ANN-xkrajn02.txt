Architektura výpočetních systému (AVS 2019)
Projekt č. 1 (ANN)
Login: xkrajn02

U každého kroku proveďte měření vypočtu pro dataset dostupný na https://www.fit.vutbr.cz/~ibordovsky/avs/datasets/bigDataset.h5
Správnost výpočtu můžete porovnat pomocí python 3 skriptu "Scripts/compareOutputs.py" s referenčním řešením.
Pro bigDataset je dostupný na https://www.fit.vutbr.cz/~ibordovsky/avs/datasets/bigRefOutput.h5

Krok 0: základní implementace
=============================
Celkový čas [s]: 194.728 s
Výkon skalárních operací [MFLOPS]:      68.626
Výkon vektorových operací [MFLOPS]:     1140.84
L1 miss [%]:                            84.4322509
L2 miss [%]:                            99.9478358
L3 miss [%]:                            0.0072776

Které PAPI_EVENTS jste použili pro získání počtu výpadků v paměti?
HW countery pro L1:PAPI_L1_DCM|PAPI_LD_INS|PAPI_SR_INS
HW countery pro L2:PAPI_L2_TCM|PAPI_L2_TCA
HW countery pro L3:PAPI_L3_TCM|PAPI_L3_TCA


Krok 1: vektorizace funkcí
===================================
Celkový čas [s]:115.377
Výkon skalárních operací [MFLOPS]:      0.00587671
Výkon vektorových operací [MFLOPS]:     1856.08
L1 miss [%]:                            38.15
L2 miss [%]:                            99.80
L3 miss [%]:                            0.015

Jaké pragmy bylo potřeba přidat?
#pragma omp simd
Které dovětky k pragmám jste použili a jaky měly vliv na kompilátorem generované funkce? (main.cpp.optrpt/neuron.cpp.optrpt)
#pragma omp declare simd uniform(inputSize) uniform(neuronCount) uniform(weight) uniform(input) linear(neuronId:1)

Po pridani dovetku z main.cpp.optrpt zmizlo:
remark #15333: simd loop was not vectorized: exception handling for a call prevents vectorization

Klesne cena smycky:
z "remark #15477: vector cost: 132.370" na "remark #15477: vector cost: 30.120"
Bez dovetku nebola smycka vektorizovana.

Krok 2: přístupy do paměti
=============================
a) S dovětky
(Sepište všechyn použité dovětky):
#pragma omp declare simd  uniform(inputSize, input) linear(weight:3136)
#pragma omp declare simd  uniform(inputSize, input) linear(weight:2048
#pragma omp declare simd  uniform(inputSize, input) linear(weight)

Celkový čas [s]: 22.6412 s
Výkon skalárních operací [MFLOPS]:      295.477
Výkon vektorových operací [MFLOPS]:     14155.8
L1 miss [%]:                            14.8350234
L2 miss [%]:                            48.2
L3 miss [%]:                            0.0632

b) Bez dovětků
Některé dovětky maji negativní dopad na výkon, přestože kompilátor tvrdí opak. Které?
#pragma omp declare simd  uniform(inputSize, input) linear(weight:3136)
#pragma omp declare simd  uniform(inputSize, input) linear(weight:2048)
Celkový čas [s]: 266.715 s
Výkon skalárních operací [MFLOPS]:      0.00251672
Výkon vektorových operací [MFLOPS]:     803.214
L1 miss [%]:                            2.1226002
L2 miss [%]:                            14
L3 miss [%]:                            0.0517

Proč mají dovětky negativní efekt na výkon?
(neklasifikovana odpověď, můžete vynechat, ale může vynést přiklonění k bodu u věcí které jsou na hraně :-) )
-


Krok 3.1: přesun #pragma omp simd
===================================
Celkový čas [s]: 22.55 s
Výkon skalárních operací [MFLOPS]:      296.17
Výkon vektorových operací [MFLOPS]:     14184.9
L1 miss [%]:                            14.9102847
L2 miss [%]:                            48.3%
L3 miss [%]:                            0.0685%

Jaký dovětek je potřeba přidat?
reduction(+:sum)

Krok 3.2: vykonání po vrstvách místo po obrázcích
===================================
Celkový čas [s]: 21.5329
Výkon skalárních operací [MFLOPS]:      173.307
Výkon vektorových operací [MFLOPS]:     15323
L1 miss [%]:                            15.4194929
L2 miss [%]:                            55.4%
L3 miss [%]:                            0.187%

Popište, jaký dopad na výkon mají výpadky v cache.
-

Krok 4: režie funkcí, zarovnání paměti
===================================
Celkový čas [s]: 20.3012 s
Výkon skalárních operací [MFLOPS]:      16.2998
Výkon vektorových operací [MFLOPS]:     16612.7
L1 miss [%]:                            16.4743537
L2 miss [%]:                            58.3
L3 miss [%]:                            0.155

Proč není zrychlení již výrazné? Na jaké typy problémů cílí tyto optimalizace?
-
